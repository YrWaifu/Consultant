"""
RQ Scheduler ‚Äî –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.
–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞—Ä—Å–µ—Ä –∑–∞–∫–æ–Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 3:00 —É—Ç—Ä–∞.
"""
from rq_scheduler import Scheduler
from datetime import datetime
from .queue import redis
from ..services.law_parser import parse_and_save_law


# –°–æ–∑–¥–∞—ë–º scheduler —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Redis
scheduler = Scheduler(connection=redis, queue_name="checks")


def setup_daily_tasks():
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ worker'–∞.
    """
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–¥–∞—á–∏ (—á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–∏—Å—å)
    for job in scheduler.get_jobs():
        if job.meta.get("task_name") == "daily_law_parsing":
            scheduler.cancel(job)
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–∫–æ–Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 3:00
    scheduler.cron(
        "0 3 * * *",  # cron: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 03:00
        func=parse_and_save_law,
        timeout="30m",  # —Ç–∞–π–º–∞—É—Ç 30 –º–∏–Ω—É—Ç
        meta={"task_name": "daily_law_parsing"}
    )
    
    print("‚úÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –∑–∞–¥–∞—á–∏:")
    print("  - –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–∫–æ–Ω–∞: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 03:00")


if __name__ == "__main__":
    """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –≤—Ä—É—á–Ω—É—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    setup_daily_tasks()
    print("üìÖ Scheduler –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    scheduler.run()

